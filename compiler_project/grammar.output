Grammar

    0 $accept: start_symbol $end

    1 start_symbol: program id semicolon rest_of_block endprogram

    2 rest_of_block: identifier_decl semicolon more_decl beginprogram statement semicolon more_statements

    3 more_decl: %empty
    4          | identifier_decl semicolon more_decl

    5 more_statements: %empty
    6                | statement semicolon more_statements

    7 identifier_decl: id identifier_decl_2 colon identifier_decl_3 integer

    8 identifier_decl_2: %empty
    9                  | comma id identifier_decl_2

   10 identifier_decl_3: %empty
   11                  | array left_paren number right_paren of

   12 statement: variable assign expression
   13          | if condition then statement semicolon loops endif
   14          | while condition loop statement semicolon rest_of_statements endloop
   15          | read variable variable_more
   16          | write variable variable_more

   17 loops: %empty
   18      | statement semicolon loops
   19      | else statement semicolon elseloop

   20 elseloop: %empty
   21         | statement semicolon elseloop

   22 rest_of_statements: %empty
   23                   | statement semicolon rest_of_statements

   24 variable_more: %empty
   25              | comma variable variable_more

   26 condition: relation_and_expression condition_2

   27 condition_2: %empty
   28            | or relation_and_expression condition_2

   29 relation_and_expression: relation_expression relation_and_expression_2

   30 relation_and_expression_2: %empty
   31                          | and relation_expression relation_and_expression_2

   32 relation_expression: not relation_expression_2
   33                    | relation_expression_2

   34 relation_expression_2: expression compr expression
   35                      | true
   36                      | false
   37                      | left_paren condition right_paren

   38 compr: eq
   39      | neq
   40      | lt
   41      | gt
   42      | lte
   43      | gte

   44 expression: mult_exp expression_2

   45 expression_2: %empty
   46             | add mult_exp expression_2
   47             | sub mult_exp expression_2

   48 mult_exp: term mult_exp_2

   49 mult_exp_2: %empty
   50           | mult term mult_exp_2
   51           | div term mult_exp_2
   52           | mod term mult_exp_2

   53 term: sub term_2
   54     | term_2

   55 term_2: variable
   56       | number
   57       | left_paren expression right_paren

   58 variable: id
   59         | id left_paren expression right_paren

   60 id: STR_LITERAL

   61 number: INT_LITERAL

   62 program: PROGRAM

   63 beginprogram: BEGINPROGRAM

   64 endprogram: ENDPROGRAM

   65 integer: INTEGER

   66 of: OF

   67 array: ARRAY

   68 if: IF

   69 then: THEN

   70 endif: ENDIF

   71 else: ELSE

   72 while: WHILE

   73 loop: LOOP

   74 endloop: ENDLOOP

   75 read: READ

   76 write: WRITE

   77 and: AND

   78 or: OR

   79 not: NOT

   80 true: TRUE

   81 false: FALSE

   82 sub: SUB

   83 add: ADD

   84 mult: MULT

   85 div: DIV

   86 mod: MOD

   87 eq: EQ

   88 neq: NEQ

   89 lt: LT

   90 gt: GT

   91 lte: LTE

   92 gte: GTE

   93 semicolon: SEMICOLON

   94 colon: COLON

   95 comma: COMMA

   96 left_paren: LEFT_PAREN

   97 right_paren: RIGHT_PAREN

   98 assign: ASSIGN


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 61
STR_LITERAL (259) 60
PROGRAM (260) 62
BEGINPROGRAM (261) 63
ENDPROGRAM (262) 64
INTEGER (263) 65
WHILE (264) 72
LOOP (265) 73
ARRAY (266) 67
OF (267) 66
IF (268) 68
THEN (269) 69
ELSE (270) 71
ENDIF (271) 70
WRITE (272) 76
READ (273) 75
OR (274) 78
NOT (275) 79
ENDLOOP (276) 74
AND (277) 77
SEMICOLON (278) 93
COMMA (279) 95
COLON (280) 94
TRUE (281) 80
FALSE (282) 81
SUB (283) 82
ADD (284) 83
MULT (285) 84
DIV (286) 85
MOD (287) 86
GT (288) 90
LT (289) 89
EQ (290) 87
GTE (291) 92
LTE (292) 91
NEQ (293) 88
LEFT_PAREN (294) 96
RIGHT_PAREN (295) 97
ASSIGN (296) 98


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
start_symbol (43)
    on left: 1, on right: 0
rest_of_block (44)
    on left: 2, on right: 1
more_decl (45)
    on left: 3 4, on right: 2 4
more_statements (46)
    on left: 5 6, on right: 2 6
identifier_decl (47)
    on left: 7, on right: 2 4
identifier_decl_2 (48)
    on left: 8 9, on right: 7 9
identifier_decl_3 (49)
    on left: 10 11, on right: 7
statement (50)
    on left: 12 13 14 15 16, on right: 2 6 13 14 18 19 21 23
loops (51)
    on left: 17 18 19, on right: 13 18
elseloop (52)
    on left: 20 21, on right: 19 21
rest_of_statements (53)
    on left: 22 23, on right: 14 23
variable_more (54)
    on left: 24 25, on right: 15 16 25
condition (55)
    on left: 26, on right: 13 14 37
condition_2 (56)
    on left: 27 28, on right: 26 28
relation_and_expression (57)
    on left: 29, on right: 26 28
relation_and_expression_2 (58)
    on left: 30 31, on right: 29 31
relation_expression (59)
    on left: 32 33, on right: 29 31
relation_expression_2 (60)
    on left: 34 35 36 37, on right: 32 33
compr (61)
    on left: 38 39 40 41 42 43, on right: 34
expression (62)
    on left: 44, on right: 12 34 57 59
expression_2 (63)
    on left: 45 46 47, on right: 44 46 47
mult_exp (64)
    on left: 48, on right: 44 46 47
mult_exp_2 (65)
    on left: 49 50 51 52, on right: 48 50 51 52
term (66)
    on left: 53 54, on right: 48 50 51 52
term_2 (67)
    on left: 55 56 57, on right: 53 54
variable (68)
    on left: 58 59, on right: 12 15 16 25 55
id (69)
    on left: 60, on right: 1 7 9 58 59
number (70)
    on left: 61, on right: 11 56
program (71)
    on left: 62, on right: 1
beginprogram (72)
    on left: 63, on right: 2
endprogram (73)
    on left: 64, on right: 1
integer (74)
    on left: 65, on right: 7
of (75)
    on left: 66, on right: 11
array (76)
    on left: 67, on right: 11
if (77)
    on left: 68, on right: 13
then (78)
    on left: 69, on right: 13
endif (79)
    on left: 70, on right: 13
else (80)
    on left: 71, on right: 19
while (81)
    on left: 72, on right: 14
loop (82)
    on left: 73, on right: 14
endloop (83)
    on left: 74, on right: 14
read (84)
    on left: 75, on right: 15
write (85)
    on left: 76, on right: 16
and (86)
    on left: 77, on right: 31
or (87)
    on left: 78, on right: 28
not (88)
    on left: 79, on right: 32
true (89)
    on left: 80, on right: 35
false (90)
    on left: 81, on right: 36
sub (91)
    on left: 82, on right: 47 53
add (92)
    on left: 83, on right: 46
mult (93)
    on left: 84, on right: 50
div (94)
    on left: 85, on right: 51
mod (95)
    on left: 86, on right: 52
eq (96)
    on left: 87, on right: 38
neq (97)
    on left: 88, on right: 39
lt (98)
    on left: 89, on right: 40
gt (99)
    on left: 90, on right: 41
lte (100)
    on left: 91, on right: 42
gte (101)
    on left: 92, on right: 43
semicolon (102)
    on left: 93, on right: 1 2 4 6 13 14 18 19 21 23
colon (103)
    on left: 94, on right: 7
comma (104)
    on left: 95, on right: 9 25
left_paren (105)
    on left: 96, on right: 11 37 57 59
right_paren (106)
    on left: 97, on right: 11 37 57 59
assign (107)
    on left: 98, on right: 12


State 0

    0 $accept: . start_symbol $end

    PROGRAM  shift, and go to state 1

    start_symbol  go to state 2
    program       go to state 3


State 1

   62 program: PROGRAM .

    $default  reduce using rule 62 (program)


State 2

    0 $accept: start_symbol . $end

    $end  shift, and go to state 4


State 3

    1 start_symbol: program . id semicolon rest_of_block endprogram

    STR_LITERAL  shift, and go to state 5

    id  go to state 6


State 4

    0 $accept: start_symbol $end .

    $default  accept


State 5

   60 id: STR_LITERAL .

    $default  reduce using rule 60 (id)


State 6

    1 start_symbol: program id . semicolon rest_of_block endprogram

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 8


State 7

   93 semicolon: SEMICOLON .

    $default  reduce using rule 93 (semicolon)


State 8

    1 start_symbol: program id semicolon . rest_of_block endprogram

    STR_LITERAL  shift, and go to state 5

    rest_of_block    go to state 9
    identifier_decl  go to state 10
    id               go to state 11


State 9

    1 start_symbol: program id semicolon rest_of_block . endprogram

    ENDPROGRAM  shift, and go to state 12

    endprogram  go to state 13


State 10

    2 rest_of_block: identifier_decl . semicolon more_decl beginprogram statement semicolon more_statements

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 14


State 11

    7 identifier_decl: id . identifier_decl_2 colon identifier_decl_3 integer

    COMMA  shift, and go to state 15

    $default  reduce using rule 8 (identifier_decl_2)

    identifier_decl_2  go to state 16
    comma              go to state 17


State 12

   64 endprogram: ENDPROGRAM .

    $default  reduce using rule 64 (endprogram)


State 13

    1 start_symbol: program id semicolon rest_of_block endprogram .

    $default  reduce using rule 1 (start_symbol)


State 14

    2 rest_of_block: identifier_decl semicolon . more_decl beginprogram statement semicolon more_statements

    STR_LITERAL  shift, and go to state 5

    $default  reduce using rule 3 (more_decl)

    more_decl        go to state 18
    identifier_decl  go to state 19
    id               go to state 11


State 15

   95 comma: COMMA .

    $default  reduce using rule 95 (comma)


State 16

    7 identifier_decl: id identifier_decl_2 . colon identifier_decl_3 integer

    COLON  shift, and go to state 20

    colon  go to state 21


State 17

    9 identifier_decl_2: comma . id identifier_decl_2

    STR_LITERAL  shift, and go to state 5

    id  go to state 22


State 18

    2 rest_of_block: identifier_decl semicolon more_decl . beginprogram statement semicolon more_statements

    BEGINPROGRAM  shift, and go to state 23

    beginprogram  go to state 24


State 19

    4 more_decl: identifier_decl . semicolon more_decl

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 25


State 20

   94 colon: COLON .

    $default  reduce using rule 94 (colon)


State 21

    7 identifier_decl: id identifier_decl_2 colon . identifier_decl_3 integer

    ARRAY  shift, and go to state 26

    $default  reduce using rule 10 (identifier_decl_3)

    identifier_decl_3  go to state 27
    array              go to state 28


State 22

    9 identifier_decl_2: comma id . identifier_decl_2

    COMMA  shift, and go to state 15

    $default  reduce using rule 8 (identifier_decl_2)

    identifier_decl_2  go to state 29
    comma              go to state 17


State 23

   63 beginprogram: BEGINPROGRAM .

    $default  reduce using rule 63 (beginprogram)


State 24

    2 rest_of_block: identifier_decl semicolon more_decl beginprogram . statement semicolon more_statements

    STR_LITERAL  shift, and go to state 5
    WHILE        shift, and go to state 30
    IF           shift, and go to state 31
    WRITE        shift, and go to state 32
    READ         shift, and go to state 33

    statement  go to state 34
    variable   go to state 35
    id         go to state 36
    if         go to state 37
    while      go to state 38
    read       go to state 39
    write      go to state 40


State 25

    4 more_decl: identifier_decl semicolon . more_decl

    STR_LITERAL  shift, and go to state 5

    $default  reduce using rule 3 (more_decl)

    more_decl        go to state 41
    identifier_decl  go to state 19
    id               go to state 11


State 26

   67 array: ARRAY .

    $default  reduce using rule 67 (array)


State 27

    7 identifier_decl: id identifier_decl_2 colon identifier_decl_3 . integer

    INTEGER  shift, and go to state 42

    integer  go to state 43


State 28

   11 identifier_decl_3: array . left_paren number right_paren of

    LEFT_PAREN  shift, and go to state 44

    left_paren  go to state 45


State 29

    9 identifier_decl_2: comma id identifier_decl_2 .

    $default  reduce using rule 9 (identifier_decl_2)


State 30

   72 while: WHILE .

    $default  reduce using rule 72 (while)


State 31

   68 if: IF .

    $default  reduce using rule 68 (if)


State 32

   76 write: WRITE .

    $default  reduce using rule 76 (write)


State 33

   75 read: READ .

    $default  reduce using rule 75 (read)


State 34

    2 rest_of_block: identifier_decl semicolon more_decl beginprogram statement . semicolon more_statements

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 46


State 35

   12 statement: variable . assign expression

    ASSIGN  shift, and go to state 47

    assign  go to state 48


State 36

   58 variable: id .
   59         | id . left_paren expression right_paren

    LEFT_PAREN  shift, and go to state 44

    $default  reduce using rule 58 (variable)

    left_paren  go to state 49


State 37

   13 statement: if . condition then statement semicolon loops endif

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    NOT          shift, and go to state 51
    TRUE         shift, and go to state 52
    FALSE        shift, and go to state 53
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    condition                go to state 55
    relation_and_expression  go to state 56
    relation_expression      go to state 57
    relation_expression_2    go to state 58
    expression               go to state 59
    mult_exp                 go to state 60
    term                     go to state 61
    term_2                   go to state 62
    variable                 go to state 63
    id                       go to state 36
    number                   go to state 64
    not                      go to state 65
    true                     go to state 66
    false                    go to state 67
    sub                      go to state 68
    left_paren               go to state 69


State 38

   14 statement: while . condition loop statement semicolon rest_of_statements endloop

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    NOT          shift, and go to state 51
    TRUE         shift, and go to state 52
    FALSE        shift, and go to state 53
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    condition                go to state 70
    relation_and_expression  go to state 56
    relation_expression      go to state 57
    relation_expression_2    go to state 58
    expression               go to state 59
    mult_exp                 go to state 60
    term                     go to state 61
    term_2                   go to state 62
    variable                 go to state 63
    id                       go to state 36
    number                   go to state 64
    not                      go to state 65
    true                     go to state 66
    false                    go to state 67
    sub                      go to state 68
    left_paren               go to state 69


State 39

   15 statement: read . variable variable_more

    STR_LITERAL  shift, and go to state 5

    variable  go to state 71
    id        go to state 36


State 40

   16 statement: write . variable variable_more

    STR_LITERAL  shift, and go to state 5

    variable  go to state 72
    id        go to state 36


State 41

    4 more_decl: identifier_decl semicolon more_decl .

    $default  reduce using rule 4 (more_decl)


State 42

   65 integer: INTEGER .

    $default  reduce using rule 65 (integer)


State 43

    7 identifier_decl: id identifier_decl_2 colon identifier_decl_3 integer .

    $default  reduce using rule 7 (identifier_decl)


State 44

   96 left_paren: LEFT_PAREN .

    $default  reduce using rule 96 (left_paren)


State 45

   11 identifier_decl_3: array left_paren . number right_paren of

    INT_LITERAL  shift, and go to state 50

    number  go to state 73


State 46

    2 rest_of_block: identifier_decl semicolon more_decl beginprogram statement semicolon . more_statements

    STR_LITERAL  shift, and go to state 5
    WHILE        shift, and go to state 30
    IF           shift, and go to state 31
    WRITE        shift, and go to state 32
    READ         shift, and go to state 33

    $default  reduce using rule 5 (more_statements)

    more_statements  go to state 74
    statement        go to state 75
    variable         go to state 35
    id               go to state 36
    if               go to state 37
    while            go to state 38
    read             go to state 39
    write            go to state 40


State 47

   98 assign: ASSIGN .

    $default  reduce using rule 98 (assign)


State 48

   12 statement: variable assign . expression

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    expression  go to state 76
    mult_exp    go to state 60
    term        go to state 61
    term_2      go to state 62
    variable    go to state 63
    id          go to state 36
    number      go to state 64
    sub         go to state 68
    left_paren  go to state 77


State 49

   59 variable: id left_paren . expression right_paren

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    expression  go to state 78
    mult_exp    go to state 60
    term        go to state 61
    term_2      go to state 62
    variable    go to state 63
    id          go to state 36
    number      go to state 64
    sub         go to state 68
    left_paren  go to state 77


State 50

   61 number: INT_LITERAL .

    $default  reduce using rule 61 (number)


State 51

   79 not: NOT .

    $default  reduce using rule 79 (not)


State 52

   80 true: TRUE .

    $default  reduce using rule 80 (true)


State 53

   81 false: FALSE .

    $default  reduce using rule 81 (false)


State 54

   82 sub: SUB .

    $default  reduce using rule 82 (sub)


State 55

   13 statement: if condition . then statement semicolon loops endif

    THEN  shift, and go to state 79

    then  go to state 80


State 56

   26 condition: relation_and_expression . condition_2

    OR  shift, and go to state 81

    $default  reduce using rule 27 (condition_2)

    condition_2  go to state 82
    or           go to state 83


State 57

   29 relation_and_expression: relation_expression . relation_and_expression_2

    AND  shift, and go to state 84

    $default  reduce using rule 30 (relation_and_expression_2)

    relation_and_expression_2  go to state 85
    and                        go to state 86


State 58

   33 relation_expression: relation_expression_2 .

    $default  reduce using rule 33 (relation_expression)


State 59

   34 relation_expression_2: expression . compr expression

    GT   shift, and go to state 87
    LT   shift, and go to state 88
    EQ   shift, and go to state 89
    GTE  shift, and go to state 90
    LTE  shift, and go to state 91
    NEQ  shift, and go to state 92

    compr  go to state 93
    eq     go to state 94
    neq    go to state 95
    lt     go to state 96
    gt     go to state 97
    lte    go to state 98
    gte    go to state 99


State 60

   44 expression: mult_exp . expression_2

    SUB  shift, and go to state 54
    ADD  shift, and go to state 100

    $default  reduce using rule 45 (expression_2)

    expression_2  go to state 101
    sub           go to state 102
    add           go to state 103


State 61

   48 mult_exp: term . mult_exp_2

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 49 (mult_exp_2)

    mult_exp_2  go to state 107
    mult        go to state 108
    div         go to state 109
    mod         go to state 110


State 62

   54 term: term_2 .

    $default  reduce using rule 54 (term)


State 63

   55 term_2: variable .

    $default  reduce using rule 55 (term_2)


State 64

   56 term_2: number .

    $default  reduce using rule 56 (term_2)


State 65

   32 relation_expression: not . relation_expression_2

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    TRUE         shift, and go to state 52
    FALSE        shift, and go to state 53
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    relation_expression_2  go to state 111
    expression             go to state 59
    mult_exp               go to state 60
    term                   go to state 61
    term_2                 go to state 62
    variable               go to state 63
    id                     go to state 36
    number                 go to state 64
    true                   go to state 66
    false                  go to state 67
    sub                    go to state 68
    left_paren             go to state 69


State 66

   35 relation_expression_2: true .

    $default  reduce using rule 35 (relation_expression_2)


State 67

   36 relation_expression_2: false .

    $default  reduce using rule 36 (relation_expression_2)


State 68

   53 term: sub . term_2

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    LEFT_PAREN   shift, and go to state 44

    term_2      go to state 112
    variable    go to state 63
    id          go to state 36
    number      go to state 64
    left_paren  go to state 77


State 69

   37 relation_expression_2: left_paren . condition right_paren
   57 term_2: left_paren . expression right_paren

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    NOT          shift, and go to state 51
    TRUE         shift, and go to state 52
    FALSE        shift, and go to state 53
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    condition                go to state 113
    relation_and_expression  go to state 56
    relation_expression      go to state 57
    relation_expression_2    go to state 58
    expression               go to state 114
    mult_exp                 go to state 60
    term                     go to state 61
    term_2                   go to state 62
    variable                 go to state 63
    id                       go to state 36
    number                   go to state 64
    not                      go to state 65
    true                     go to state 66
    false                    go to state 67
    sub                      go to state 68
    left_paren               go to state 69


State 70

   14 statement: while condition . loop statement semicolon rest_of_statements endloop

    LOOP  shift, and go to state 115

    loop  go to state 116


State 71

   15 statement: read variable . variable_more

    COMMA  shift, and go to state 15

    $default  reduce using rule 24 (variable_more)

    variable_more  go to state 117
    comma          go to state 118


State 72

   16 statement: write variable . variable_more

    COMMA  shift, and go to state 15

    $default  reduce using rule 24 (variable_more)

    variable_more  go to state 119
    comma          go to state 118


State 73

   11 identifier_decl_3: array left_paren number . right_paren of

    RIGHT_PAREN  shift, and go to state 120

    right_paren  go to state 121


State 74

    2 rest_of_block: identifier_decl semicolon more_decl beginprogram statement semicolon more_statements .

    $default  reduce using rule 2 (rest_of_block)


State 75

    6 more_statements: statement . semicolon more_statements

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 122


State 76

   12 statement: variable assign expression .

    $default  reduce using rule 12 (statement)


State 77

   57 term_2: left_paren . expression right_paren

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    expression  go to state 123
    mult_exp    go to state 60
    term        go to state 61
    term_2      go to state 62
    variable    go to state 63
    id          go to state 36
    number      go to state 64
    sub         go to state 68
    left_paren  go to state 77


State 78

   59 variable: id left_paren expression . right_paren

    RIGHT_PAREN  shift, and go to state 120

    right_paren  go to state 124


State 79

   69 then: THEN .

    $default  reduce using rule 69 (then)


State 80

   13 statement: if condition then . statement semicolon loops endif

    STR_LITERAL  shift, and go to state 5
    WHILE        shift, and go to state 30
    IF           shift, and go to state 31
    WRITE        shift, and go to state 32
    READ         shift, and go to state 33

    statement  go to state 125
    variable   go to state 35
    id         go to state 36
    if         go to state 37
    while      go to state 38
    read       go to state 39
    write      go to state 40


State 81

   78 or: OR .

    $default  reduce using rule 78 (or)


State 82

   26 condition: relation_and_expression condition_2 .

    $default  reduce using rule 26 (condition)


State 83

   28 condition_2: or . relation_and_expression condition_2

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    NOT          shift, and go to state 51
    TRUE         shift, and go to state 52
    FALSE        shift, and go to state 53
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    relation_and_expression  go to state 126
    relation_expression      go to state 57
    relation_expression_2    go to state 58
    expression               go to state 59
    mult_exp                 go to state 60
    term                     go to state 61
    term_2                   go to state 62
    variable                 go to state 63
    id                       go to state 36
    number                   go to state 64
    not                      go to state 65
    true                     go to state 66
    false                    go to state 67
    sub                      go to state 68
    left_paren               go to state 69


State 84

   77 and: AND .

    $default  reduce using rule 77 (and)


State 85

   29 relation_and_expression: relation_expression relation_and_expression_2 .

    $default  reduce using rule 29 (relation_and_expression)


State 86

   31 relation_and_expression_2: and . relation_expression relation_and_expression_2

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    NOT          shift, and go to state 51
    TRUE         shift, and go to state 52
    FALSE        shift, and go to state 53
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    relation_expression    go to state 127
    relation_expression_2  go to state 58
    expression             go to state 59
    mult_exp               go to state 60
    term                   go to state 61
    term_2                 go to state 62
    variable               go to state 63
    id                     go to state 36
    number                 go to state 64
    not                    go to state 65
    true                   go to state 66
    false                  go to state 67
    sub                    go to state 68
    left_paren             go to state 69


State 87

   90 gt: GT .

    $default  reduce using rule 90 (gt)


State 88

   89 lt: LT .

    $default  reduce using rule 89 (lt)


State 89

   87 eq: EQ .

    $default  reduce using rule 87 (eq)


State 90

   92 gte: GTE .

    $default  reduce using rule 92 (gte)


State 91

   91 lte: LTE .

    $default  reduce using rule 91 (lte)


State 92

   88 neq: NEQ .

    $default  reduce using rule 88 (neq)


State 93

   34 relation_expression_2: expression compr . expression

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    expression  go to state 128
    mult_exp    go to state 60
    term        go to state 61
    term_2      go to state 62
    variable    go to state 63
    id          go to state 36
    number      go to state 64
    sub         go to state 68
    left_paren  go to state 77


State 94

   38 compr: eq .

    $default  reduce using rule 38 (compr)


State 95

   39 compr: neq .

    $default  reduce using rule 39 (compr)


State 96

   40 compr: lt .

    $default  reduce using rule 40 (compr)


State 97

   41 compr: gt .

    $default  reduce using rule 41 (compr)


State 98

   42 compr: lte .

    $default  reduce using rule 42 (compr)


State 99

   43 compr: gte .

    $default  reduce using rule 43 (compr)


State 100

   83 add: ADD .

    $default  reduce using rule 83 (add)


State 101

   44 expression: mult_exp expression_2 .

    $default  reduce using rule 44 (expression)


State 102

   47 expression_2: sub . mult_exp expression_2

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    mult_exp    go to state 129
    term        go to state 61
    term_2      go to state 62
    variable    go to state 63
    id          go to state 36
    number      go to state 64
    sub         go to state 68
    left_paren  go to state 77


State 103

   46 expression_2: add . mult_exp expression_2

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    mult_exp    go to state 130
    term        go to state 61
    term_2      go to state 62
    variable    go to state 63
    id          go to state 36
    number      go to state 64
    sub         go to state 68
    left_paren  go to state 77


State 104

   84 mult: MULT .

    $default  reduce using rule 84 (mult)


State 105

   85 div: DIV .

    $default  reduce using rule 85 (div)


State 106

   86 mod: MOD .

    $default  reduce using rule 86 (mod)


State 107

   48 mult_exp: term mult_exp_2 .

    $default  reduce using rule 48 (mult_exp)


State 108

   50 mult_exp_2: mult . term mult_exp_2

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    term        go to state 131
    term_2      go to state 62
    variable    go to state 63
    id          go to state 36
    number      go to state 64
    sub         go to state 68
    left_paren  go to state 77


State 109

   51 mult_exp_2: div . term mult_exp_2

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    term        go to state 132
    term_2      go to state 62
    variable    go to state 63
    id          go to state 36
    number      go to state 64
    sub         go to state 68
    left_paren  go to state 77


State 110

   52 mult_exp_2: mod . term mult_exp_2

    INT_LITERAL  shift, and go to state 50
    STR_LITERAL  shift, and go to state 5
    SUB          shift, and go to state 54
    LEFT_PAREN   shift, and go to state 44

    term        go to state 133
    term_2      go to state 62
    variable    go to state 63
    id          go to state 36
    number      go to state 64
    sub         go to state 68
    left_paren  go to state 77


State 111

   32 relation_expression: not relation_expression_2 .

    $default  reduce using rule 32 (relation_expression)


State 112

   53 term: sub term_2 .

    $default  reduce using rule 53 (term)


State 113

   37 relation_expression_2: left_paren condition . right_paren

    RIGHT_PAREN  shift, and go to state 120

    right_paren  go to state 134


State 114

   34 relation_expression_2: expression . compr expression
   57 term_2: left_paren expression . right_paren

    GT           shift, and go to state 87
    LT           shift, and go to state 88
    EQ           shift, and go to state 89
    GTE          shift, and go to state 90
    LTE          shift, and go to state 91
    NEQ          shift, and go to state 92
    RIGHT_PAREN  shift, and go to state 120

    compr        go to state 93
    eq           go to state 94
    neq          go to state 95
    lt           go to state 96
    gt           go to state 97
    lte          go to state 98
    gte          go to state 99
    right_paren  go to state 135


State 115

   73 loop: LOOP .

    $default  reduce using rule 73 (loop)


State 116

   14 statement: while condition loop . statement semicolon rest_of_statements endloop

    STR_LITERAL  shift, and go to state 5
    WHILE        shift, and go to state 30
    IF           shift, and go to state 31
    WRITE        shift, and go to state 32
    READ         shift, and go to state 33

    statement  go to state 136
    variable   go to state 35
    id         go to state 36
    if         go to state 37
    while      go to state 38
    read       go to state 39
    write      go to state 40


State 117

   15 statement: read variable variable_more .

    $default  reduce using rule 15 (statement)


State 118

   25 variable_more: comma . variable variable_more

    STR_LITERAL  shift, and go to state 5

    variable  go to state 137
    id        go to state 36


State 119

   16 statement: write variable variable_more .

    $default  reduce using rule 16 (statement)


State 120

   97 right_paren: RIGHT_PAREN .

    $default  reduce using rule 97 (right_paren)


State 121

   11 identifier_decl_3: array left_paren number right_paren . of

    OF  shift, and go to state 138

    of  go to state 139


State 122

    6 more_statements: statement semicolon . more_statements

    STR_LITERAL  shift, and go to state 5
    WHILE        shift, and go to state 30
    IF           shift, and go to state 31
    WRITE        shift, and go to state 32
    READ         shift, and go to state 33

    $default  reduce using rule 5 (more_statements)

    more_statements  go to state 140
    statement        go to state 75
    variable         go to state 35
    id               go to state 36
    if               go to state 37
    while            go to state 38
    read             go to state 39
    write            go to state 40


State 123

   57 term_2: left_paren expression . right_paren

    RIGHT_PAREN  shift, and go to state 120

    right_paren  go to state 135


State 124

   59 variable: id left_paren expression right_paren .

    $default  reduce using rule 59 (variable)


State 125

   13 statement: if condition then statement . semicolon loops endif

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 141


State 126

   28 condition_2: or relation_and_expression . condition_2

    OR  shift, and go to state 81

    $default  reduce using rule 27 (condition_2)

    condition_2  go to state 142
    or           go to state 83


State 127

   31 relation_and_expression_2: and relation_expression . relation_and_expression_2

    AND  shift, and go to state 84

    $default  reduce using rule 30 (relation_and_expression_2)

    relation_and_expression_2  go to state 143
    and                        go to state 86


State 128

   34 relation_expression_2: expression compr expression .

    $default  reduce using rule 34 (relation_expression_2)


State 129

   47 expression_2: sub mult_exp . expression_2

    SUB  shift, and go to state 54
    ADD  shift, and go to state 100

    $default  reduce using rule 45 (expression_2)

    expression_2  go to state 144
    sub           go to state 102
    add           go to state 103


State 130

   46 expression_2: add mult_exp . expression_2

    SUB  shift, and go to state 54
    ADD  shift, and go to state 100

    $default  reduce using rule 45 (expression_2)

    expression_2  go to state 145
    sub           go to state 102
    add           go to state 103


State 131

   50 mult_exp_2: mult term . mult_exp_2

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 49 (mult_exp_2)

    mult_exp_2  go to state 146
    mult        go to state 108
    div         go to state 109
    mod         go to state 110


State 132

   51 mult_exp_2: div term . mult_exp_2

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 49 (mult_exp_2)

    mult_exp_2  go to state 147
    mult        go to state 108
    div         go to state 109
    mod         go to state 110


State 133

   52 mult_exp_2: mod term . mult_exp_2

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 49 (mult_exp_2)

    mult_exp_2  go to state 148
    mult        go to state 108
    div         go to state 109
    mod         go to state 110


State 134

   37 relation_expression_2: left_paren condition right_paren .

    $default  reduce using rule 37 (relation_expression_2)


State 135

   57 term_2: left_paren expression right_paren .

    $default  reduce using rule 57 (term_2)


State 136

   14 statement: while condition loop statement . semicolon rest_of_statements endloop

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 149


State 137

   25 variable_more: comma variable . variable_more

    COMMA  shift, and go to state 15

    $default  reduce using rule 24 (variable_more)

    variable_more  go to state 150
    comma          go to state 118


State 138

   66 of: OF .

    $default  reduce using rule 66 (of)


State 139

   11 identifier_decl_3: array left_paren number right_paren of .

    $default  reduce using rule 11 (identifier_decl_3)


State 140

    6 more_statements: statement semicolon more_statements .

    $default  reduce using rule 6 (more_statements)


State 141

   13 statement: if condition then statement semicolon . loops endif

    STR_LITERAL  shift, and go to state 5
    WHILE        shift, and go to state 30
    IF           shift, and go to state 31
    ELSE         shift, and go to state 151
    WRITE        shift, and go to state 32
    READ         shift, and go to state 33

    $default  reduce using rule 17 (loops)

    statement  go to state 152
    loops      go to state 153
    variable   go to state 35
    id         go to state 36
    if         go to state 37
    else       go to state 154
    while      go to state 38
    read       go to state 39
    write      go to state 40


State 142

   28 condition_2: or relation_and_expression condition_2 .

    $default  reduce using rule 28 (condition_2)


State 143

   31 relation_and_expression_2: and relation_expression relation_and_expression_2 .

    $default  reduce using rule 31 (relation_and_expression_2)


State 144

   47 expression_2: sub mult_exp expression_2 .

    $default  reduce using rule 47 (expression_2)


State 145

   46 expression_2: add mult_exp expression_2 .

    $default  reduce using rule 46 (expression_2)


State 146

   50 mult_exp_2: mult term mult_exp_2 .

    $default  reduce using rule 50 (mult_exp_2)


State 147

   51 mult_exp_2: div term mult_exp_2 .

    $default  reduce using rule 51 (mult_exp_2)


State 148

   52 mult_exp_2: mod term mult_exp_2 .

    $default  reduce using rule 52 (mult_exp_2)


State 149

   14 statement: while condition loop statement semicolon . rest_of_statements endloop

    STR_LITERAL  shift, and go to state 5
    WHILE        shift, and go to state 30
    IF           shift, and go to state 31
    WRITE        shift, and go to state 32
    READ         shift, and go to state 33

    $default  reduce using rule 22 (rest_of_statements)

    statement           go to state 155
    rest_of_statements  go to state 156
    variable            go to state 35
    id                  go to state 36
    if                  go to state 37
    while               go to state 38
    read                go to state 39
    write               go to state 40


State 150

   25 variable_more: comma variable variable_more .

    $default  reduce using rule 25 (variable_more)


State 151

   71 else: ELSE .

    $default  reduce using rule 71 (else)


State 152

   18 loops: statement . semicolon loops

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 157


State 153

   13 statement: if condition then statement semicolon loops . endif

    ENDIF  shift, and go to state 158

    endif  go to state 159


State 154

   19 loops: else . statement semicolon elseloop

    STR_LITERAL  shift, and go to state 5
    WHILE        shift, and go to state 30
    IF           shift, and go to state 31
    WRITE        shift, and go to state 32
    READ         shift, and go to state 33

    statement  go to state 160
    variable   go to state 35
    id         go to state 36
    if         go to state 37
    while      go to state 38
    read       go to state 39
    write      go to state 40


State 155

   23 rest_of_statements: statement . semicolon rest_of_statements

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 161


State 156

   14 statement: while condition loop statement semicolon rest_of_statements . endloop

    ENDLOOP  shift, and go to state 162

    endloop  go to state 163


State 157

   18 loops: statement semicolon . loops

    STR_LITERAL  shift, and go to state 5
    WHILE        shift, and go to state 30
    IF           shift, and go to state 31
    ELSE         shift, and go to state 151
    WRITE        shift, and go to state 32
    READ         shift, and go to state 33

    $default  reduce using rule 17 (loops)

    statement  go to state 152
    loops      go to state 164
    variable   go to state 35
    id         go to state 36
    if         go to state 37
    else       go to state 154
    while      go to state 38
    read       go to state 39
    write      go to state 40


State 158

   70 endif: ENDIF .

    $default  reduce using rule 70 (endif)


State 159

   13 statement: if condition then statement semicolon loops endif .

    $default  reduce using rule 13 (statement)


State 160

   19 loops: else statement . semicolon elseloop

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 165


State 161

   23 rest_of_statements: statement semicolon . rest_of_statements

    STR_LITERAL  shift, and go to state 5
    WHILE        shift, and go to state 30
    IF           shift, and go to state 31
    WRITE        shift, and go to state 32
    READ         shift, and go to state 33

    $default  reduce using rule 22 (rest_of_statements)

    statement           go to state 155
    rest_of_statements  go to state 166
    variable            go to state 35
    id                  go to state 36
    if                  go to state 37
    while               go to state 38
    read                go to state 39
    write               go to state 40


State 162

   74 endloop: ENDLOOP .

    $default  reduce using rule 74 (endloop)


State 163

   14 statement: while condition loop statement semicolon rest_of_statements endloop .

    $default  reduce using rule 14 (statement)


State 164

   18 loops: statement semicolon loops .

    $default  reduce using rule 18 (loops)


State 165

   19 loops: else statement semicolon . elseloop

    STR_LITERAL  shift, and go to state 5
    WHILE        shift, and go to state 30
    IF           shift, and go to state 31
    WRITE        shift, and go to state 32
    READ         shift, and go to state 33

    $default  reduce using rule 20 (elseloop)

    statement  go to state 167
    elseloop   go to state 168
    variable   go to state 35
    id         go to state 36
    if         go to state 37
    while      go to state 38
    read       go to state 39
    write      go to state 40


State 166

   23 rest_of_statements: statement semicolon rest_of_statements .

    $default  reduce using rule 23 (rest_of_statements)


State 167

   21 elseloop: statement . semicolon elseloop

    SEMICOLON  shift, and go to state 7

    semicolon  go to state 169


State 168

   19 loops: else statement semicolon elseloop .

    $default  reduce using rule 19 (loops)


State 169

   21 elseloop: statement semicolon . elseloop

    STR_LITERAL  shift, and go to state 5
    WHILE        shift, and go to state 30
    IF           shift, and go to state 31
    WRITE        shift, and go to state 32
    READ         shift, and go to state 33

    $default  reduce using rule 20 (elseloop)

    statement  go to state 167
    elseloop   go to state 170
    variable   go to state 35
    id         go to state 36
    if         go to state 37
    while      go to state 38
    read       go to state 39
    write      go to state 40


State 170

   21 elseloop: statement semicolon elseloop .

    $default  reduce using rule 21 (elseloop)
